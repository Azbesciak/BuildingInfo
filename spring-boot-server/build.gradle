buildscript {
  ext {
    kotlinVersion = '1.2.10'
    springBootVersion = '2.0.0.M7'
    dokka_version = '0.9.15'
  }
  repositories {
    jcenter()
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/libs-milestone-local" }
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    classpath 'org.springframework:springloaded:1.2.6.RELEASE'
    classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
  }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: "kotlin-allopen"
apply plugin: 'org.jetbrains.dokka'

group = 'cs.io'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

dokka {
  outputFormat = 'html'
  outputDirectory = "$buildDir/javadoc"
}

idea {
  module {
    inheritOutputDirs = false
    outputDir = file("$buildDir/classes/main/")
  }
}

compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

repositories {
  mavenCentral()
  maven { url "https://repo.spring.io/snapshot" }
  maven { url "https://repo.spring.io/milestone" }
  maven { url "http://repo.spring.io/libs-milestone-local" }
}


dependencies {
  compile project(":frontend")

  compile('org.springframework.boot:spring-boot-starter-actuator')
  compile('org.springframework.boot:spring-boot-starter-webflux')
  compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
  runtime('org.springframework.boot:spring-boot-devtools')
  compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
  compile('com.fasterxml.jackson.module:jackson-module-kotlin:2.9.3')
  compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
  compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
  compile("org.jetbrains.kotlin:kotlin-stdlib-jre7:${kotlinVersion}")
  compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")

  testCompile('org.springframework.security:spring-security-test')
  testCompile('org.springframework.boot:spring-boot-starter-test') {
    exclude(group:"junit")
  }
  testCompile("org.junit.jupiter:junit-jupiter-api")
  testRuntime("org.junit.jupiter:junit-jupiter-engine")
  testCompile('io.projectreactor:reactor-test')
}
